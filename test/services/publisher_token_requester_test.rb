require "test_helper"
require "webmock/minitest"

class PublisherTokenRequesterTest < ActiveJob::TestCase
  test "when offline generates a random token" do
    prev_offline = Rails.application.secrets[:api_eyeshade_offline]
    begin
      Rails.application.secrets[:api_eyeshade_offline] = true

      token = PublisherTokenRequester.new(publisher: "example.com").perform
      assert_equal 64, token.length
    ensure
      Rails.application.secrets[:api_eyeshade_offline] = prev_offline
    end
  end

  test "when online, returns a token generated by eyeshade" do
    prev_offline = Rails.application.secrets[:api_eyeshade_offline]
    begin
      Rails.application.secrets[:api_eyeshade_offline] = false

      publisher = publishers(:default)
      publisher.brave_publisher_id = 'example.com'

      stub_request(:get, /v1\/publishers\/example\.com\/verifications/)
          .to_return(status: 200, body: "{\"token\":\"abc123\"}", headers: {})

      assert_equal "abc123", PublisherTokenRequester.new(publisher: publisher).perform
    ensure
      Rails.application.secrets[:api_eyeshade_offline] = prev_offline
    end
  end

  test "when online, sends the publisher's show_verification_status as a query param" do
    prev_offline = Rails.application.secrets[:api_eyeshade_offline]
    begin
      Rails.application.secrets[:api_eyeshade_offline] = false

      channel = channels(:default)
      channel.details.brave_publisher_id = 'example.com'
      channel.show_verification_status = true

      stub_request(:get, /v1\/publishers\/example\.com\/verifications\/#{publisher.id}\?show_verification_status\=true/)
          .to_return(status: 200, body: "{\"token\":\"abc123\"}", headers: {})

      assert_equal "abc123", PublisherTokenRequester.new(publisher: publisher).perform

      publisher.show_verification_status = false

      stub_request(:get, /v1\/publishers\/example\.com\/verifications\/#{publisher.id}\?show_verification_status\=false/)
          .to_return(status: 200, body: "{\"token\":\"def345\"}", headers: {})

      assert_equal "def345", PublisherTokenRequester.new(publisher: publisher).perform
    ensure
      Rails.application.secrets[:api_eyeshade_offline] = prev_offline
    end
  end
end
